spring:
  application:
    name: zuul-reverse
zuul:
  ignored-services: "*"
  prefix: /api
  retryable: true
  routes:
    feign-problem-client:
      path: /v1/problem/**
      sensitiveHeaders:  #if you want to pass cookie or authorizations or all header(except the ignored ones).
      serviceId: feign-problem-client #from service discovery
      stripPrefix: false
    sub-problem:
      path: /v1/sub-problem/**
      serviceId: sub-problem
      stripPrefix: false
  ribbon:
    eager-load:
      enabled: true #ribbon clients are lazily loaded by spring cloud on first call, we can change it
  ribbon-isolation-strategy: THREAD
  thread-pool:
    use-separate-thread-pools: true
#zuul.max.host.maxTotalConnections = 200 default
#zuul.host.maxPerRouteConnetions = 20 default

ribbon:
  eureka:
    enabled: true

hystrix:
  command:
    feign-problem-client:
      execution:
        isolcation:
          thread:
            timeoutInMilliseconds: 20000
  metrics:
    enabled: true

eureka:
  instance:
    lease-renewal-interval-in-seconds: 10
    instance-id: ${spring.application.name}:${server.port}:${random.value}
    metadata-map:
      instanceId: ${spring.application.name}:${server.port}
  client:
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
    region: ap-northeast-2
    service-url:
      ap-northeast-2a:  http://{eureka-url-2a-url}:8081/eureka
      ap-northeast-2c:  http://{eureke-regions-2c-url}:8082/eureka
      defaultZone: http://{eureka-url-2a-url}:8081/eureka, http://{eureke-regions-2c-url}:8082/eureka
    prefer-same-zone-eureka: false

server:
  port: 4000

---
spring:
  profiles: debug
eureka:
  instance:
    hostname: localhost
    lease-renewal-interval-in-seconds: 30 #20초마다 eureka 로 부터 정보 갱신
    metadata-map:
      instanceId: ${spring.application.name}:${server.port}
    instance-id: ${spring.application.name}:${server.port}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8081/eureka/
      preferSameZoneEureka: true

---
spring:
  profiles: ap-northeast-2a
eureka:
  instance:
    metadata-map:
      zone: ap-northeast-2a

---
spring:
  profiles: ap-northeast-2c
eureka:
  instance:
    metadata-map:
      zone: ap-northeast-2c

#feign-problem-client:
#  ribbon:
#    eureka:
#      enabled: true
#    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
#    ConnectTimeout: 5000
#    ReadTimeout: 5000
#    MaxTotalHttpConnections: 500
#    MaxConnectionsPerHost: 100
# eureka사용시 위와 같은 형태로 동작한다고 보면 된다.
#iping -> NIWSDiscoveryPing
#ribbonServerList -> DiscoveryEnabledNIWServerList